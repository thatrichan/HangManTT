{"ast":null,"code":"var _jsxFileName = \"/Users/thatrichan/Desktop/HangManTT/src/Hangman.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { randomWord } from './components/words.js';\nimport React from 'react';\nimport './Hangman.css';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Hangman() {\n  _s();\n\n  const [single, setSingle] = useState(false);\n  const [double, setDouble] = useState(false);\n  const [word, setword] = useState(\"\");\n\n  function generateWord(single) {\n    if (single) {\n      word = randomWord();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Hangman\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"single\",\n      onClick: () => setSingle(true),\n      children: \"1 Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), \"alert(word)\", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"double\",\n      onClick: () => setDouble(true),\n      children: \"2 Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Hangman, \"+Axj7E592IiTn+fqxEKJNJINFP4=\");\n\n_c = Hangman;\nexport default Hangman;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hangman\");","map":{"version":3,"names":["useState","randomWord","React","ReactDOM","Hangman","single","setSingle","double","setDouble","word","setword","generateWord"],"sources":["/Users/thatrichan/Desktop/HangManTT/src/Hangman.js"],"sourcesContent":["import { useState } from 'react';\nimport { randomWord } from './components/words.js';\nimport React from 'react'; \nimport './Hangman.css';\nimport ReactDOM from 'react-dom';\n\n\n\nfunction Hangman() {\n    const [single, setSingle] = useState(false);\n    const [double, setDouble] = useState(false);\n    const [word, setword] = useState(\"\");\n    function generateWord(single){\n        if (single){\n            word = randomWord();\n        }\n    }\n\n  return (\n    <div className=\"Hangman\" >\n        <button className=\"single\" onClick={() => setSingle(true)}>1 Player</button>\n        alert(word)\n        <button className=\"double\" onClick={() => setDouble(true)}>2 Player</button>\n    </div>\n  );\n}\n\nexport default Hangman;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAIA,SAASC,OAAT,GAAmB;EAAA;;EACf,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;EACA,MAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;EACA,MAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;;EACA,SAASW,YAAT,CAAsBN,MAAtB,EAA6B;IACzB,IAAIA,MAAJ,EAAW;MACPI,IAAI,GAAGR,UAAU,EAAjB;IACH;EACJ;;EAEH,oBACE;IAAK,SAAS,EAAC,SAAf;IAAA,wBACI;MAAQ,SAAS,EAAC,QAAlB;MAA2B,OAAO,EAAE,MAAMK,SAAS,CAAC,IAAD,CAAnD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,8BAGI;MAAQ,SAAS,EAAC,QAAlB;MAA2B,OAAO,EAAE,MAAME,SAAS,CAAC,IAAD,CAAnD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GAjBQJ,O;;KAAAA,O;AAmBT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}